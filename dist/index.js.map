{"mappings":"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","sources":["src/index.js"],"sourcesContent":["class WheelFortune {\n  static gsap;\n\n  static customEase;\n\n  #containerEl;\n\n  #segmentsEl;\n\n  #buttonEl;\n\n  #rotationCount;\n\n  #segmentCount;\n\n  #spinStates;\n\n  #currentSpinIndex;\n\n  #tlSpin;\n\n  #tlBlackout;\n\n  #wheelLibration;\n\n  #tlLibration;\n\n  constructor({\n    containerEl = '.wheel',\n    segmentsEl = '.wheel__segments',\n    buttonEl = '.wheel__button',\n    rotationCount = 3,\n    segmentCount = 8,\n    spinStates = [],\n    wheelLibration = false,\n  } = {}) {\n    this.gsap = WheelFortune.gsap || window.gsap;\n\n    this.#rotationCount = rotationCount;\n    this.#segmentCount = segmentCount;\n    this.#spinStates = spinStates;\n    this.#currentSpinIndex = 0;\n    this.#wheelLibration = wheelLibration;\n\n    this.#containerEl = WheelFortune.#getElement(containerEl);\n    this.#segmentsEl = WheelFortune.#getElement(segmentsEl);\n    this.#buttonEl = WheelFortune.#getElement(buttonEl);\n  }\n\n  static registerGSAP(gsap, customEase) {\n    WheelFortune.gsap = gsap;\n    WheelFortune.customEase = customEase;\n  }\n\n  static #getElement(el) {\n    return el instanceof HTMLElement ? el : document.querySelector(el);\n  }\n\n  #calculate = (stopSegment) => {\n    const fullCircle = 360;\n    const segmentAngle = fullCircle / this.#segmentCount;\n    const wheelTurn = fullCircle * this.#rotationCount;\n    const rotation = wheelTurn - (segmentAngle * (stopSegment - 1));\n\n    return { fullCircle, wheelTurn, rotation };\n  };\n\n  #spinBegin = () => {\n    this.gsap.to(this.#containerEl, {\n      '--blurring': '40px',\n      duration: 1,\n      delay: 0.25,\n      ease: 'circ.in',\n    });\n\n    this.#containerEl.classList.add('is-spinning');\n  };\n\n  #spinProcess = () => {\n    this.gsap.to(this.#containerEl, {\n      '--blurring': '0px',\n      duration: 1,\n      delay: 0.5,\n      ease: 'power2.out',\n    });\n  };\n\n  #spinEnd = () => {\n    this.#currentSpinIndex += 1;\n    this.#containerEl.classList.remove('is-spinning');\n\n    if (this.#currentSpinIndex >= this.#spinStates.length) {\n      this.#containerEl.classList.add('end-last-spin');\n    }\n  };\n\n  spin = () => {\n    if (this.#tlLibration) {\n      this.#tlLibration.kill();\n      this.#tlLibration = null;\n    }\n\n    const { stopSegment, callback } = this.#spinStates[this.#currentSpinIndex];\n    const { fullCircle, wheelTurn, rotation } = this.#calculate(stopSegment);\n\n    this.#tlSpin = this.gsap.timeline({ paused: true });\n    this.#tlBlackout = this.gsap.timeline({ paused: true });\n\n    this.#tlSpin\n      .to(this.#segmentsEl, {\n        clearProps: 'rotation',\n        ease: 'power2.in',\n        rotation: `+=${wheelTurn}`,\n        duration: 1.5,\n        onStart: this.#spinBegin,\n      })\n      .to(this.#segmentsEl, {\n        clearProps: 'rotation',\n        ease: 'none',\n        rotation: `+=${fullCircle}`,\n        duration: 0.15,\n        repeat: this.#rotationCount,\n      })\n      .to(this.#segmentsEl, {\n        ease: WheelFortune.customEase.create('custom', 'M0,0 C0.11,0.494 0.136,0.67 0.318,0.852 0.626,1.16 0.853,0.989 1,1'),\n        rotation: `+=${rotation}`,\n        duration: 3,\n        onStart: this.#spinProcess,\n        onComplete: () => {\n          if (callback) callback();\n\n          this.#tlBlackout.restart();\n        },\n      });\n\n    this.#tlBlackout\n      .to(this.#containerEl, {\n        '--blackout-opacity': '0.6',\n        duration: 0.5,\n        ease: 'power2.in',\n      })\n      .to(this.#containerEl, {\n        '--blackout-opacity': '0',\n        duration: 0.5,\n        ease: 'power2.out',\n        onComplete: this.#spinEnd,\n      }, '<2');\n\n    this.#tlSpin.restart();\n  };\n\n  #libration = () => {\n    this.#tlLibration = this.gsap.timeline();\n\n    this.#tlLibration\n      .set(this.#segmentsEl, {\n        rotate: 0,\n      })\n      .to(this.#segmentsEl, {\n        rotate: -6,\n        duration: 0.75,\n        ease: 'power1.inOut',\n      })\n      .fromTo(this.#segmentsEl, {\n        rotate: -6,\n      }, {\n        rotate: 6,\n        duration: 1.5,\n        repeat: -1,\n        yoyo: true,\n        ease: 'power1.inOut',\n      });\n  };\n\n  spinAction = () => {\n    this.#buttonEl.onclick = this.spin;\n  };\n\n  init = () => {\n    this.spinAction();\n    this.#containerEl.style.setProperty('--blackout-opacity', '0');\n    this.#containerEl.style.setProperty('--blackout-angle', this.#segmentCount);\n\n    if (this.#wheelLibration) {\n      this.#libration();\n    }\n  };\n\n  destroy = () => {\n    this.gsap.killTweensOf([this.#containerEl, this.#segmentsEl]);\n\n    this.#buttonEl.onclick = null;\n  };\n}\n\nexport default WheelFortune;\n"],"names":[],"version":3,"file":"index.js.map"}