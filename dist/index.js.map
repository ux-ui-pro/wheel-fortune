{"mappings":"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","sources":["src/index.js"],"sourcesContent":["class WheelFortune {\n  #containerEl;\n  #segmentsEl;\n  #buttonEl;\n  #rotationCount;\n  #segmentCount;\n  #spinStates;\n  #currentSpinIndex;\n  #tlSpin;\n  #tlBlackout;\n\n  constructor({\n    containerEl = '.wheel',\n    segmentsEl = '.wheel__segments',\n    buttonEl = '.wheel__button',\n    rotationCount = 3,\n    segmentCount = 8,\n    spinStates = [],\n  } = {}) {\n    this.#rotationCount = rotationCount;\n    this.#segmentCount = segmentCount;\n    this.#spinStates = spinStates;\n    this.#currentSpinIndex = 0;\n\n    const getElement = (el) => el instanceof HTMLElement ? el : document.querySelector(el);\n\n    this.#containerEl = getElement(containerEl);\n    this.#segmentsEl = getElement(segmentsEl);\n    this.#buttonEl = getElement(buttonEl);\n  }\n\n  #calculate(stopSegment) {\n    const fullCircle = 360;\n    const segmentAngle = fullCircle / this.#segmentCount;\n    const wheelTurn = fullCircle * this.#rotationCount;\n    const rotation = wheelTurn - (segmentAngle * (stopSegment - 1));\n\n    return { fullCircle, wheelTurn, rotation };\n  }\n\n  spin() {\n    const { stopSegment, callback } = this.#spinStates[this.#currentSpinIndex];\n    const { fullCircle, wheelTurn, rotation } = this.#calculate(stopSegment);\n\n    this.#tlSpin = gsap.timeline({ paused: true });\n    this.#tlBlackout = gsap.timeline({ paused: true });\n\n    const spinBegin = () => {\n      gsap.to(this.#containerEl, {\n        '--blurring': '40px',\n        duration: 1,\n        delay: 0.25,\n        ease: 'circ.in',\n      });\n\n      this.#containerEl.classList.add('is-spinning');\n    };\n\n    const spinProcess = () => {\n      gsap.to(this.#containerEl, {\n        '--blurring': '0px',\n        duration: 1,\n        delay: 0.5,\n        ease: 'power2.out',\n      });\n    };\n\n    const spinEnd = () => {\n      callback?.();\n\n      this.#currentSpinIndex++;\n      this.#containerEl.classList.remove('is-spinning');\n\n      if (this.#currentSpinIndex >= this.#spinStates.length) {\n        this.#containerEl.classList.add('end-last-spin');\n      }\n    };\n\n    this.#tlSpin\n      .to(this.#segmentsEl, {\n        clearProps: 'rotation',\n        ease: 'power2.in',\n        rotation: `+=${ wheelTurn }`,\n        duration: 1.5,\n        onStart: spinBegin,\n      })\n      .to(this.#segmentsEl, {\n        clearProps: 'rotation',\n        ease: 'none',\n        rotation: `+=${ fullCircle }`,\n        duration: 0.15,\n        repeat: this.#rotationCount,\n      })\n      .to(this.#segmentsEl, {\n        ease: CustomEase.create('custom', 'M0,0 C0.11,0.494 0.136,0.67 0.318,0.852 0.626,1.16 0.853,0.989 1,1'),\n        rotation: `+=${ rotation }`,\n        duration: 3,\n        onStart: spinProcess,\n        onComplete: () => this.#tlBlackout.restart(),\n      });\n\n    this.#tlBlackout\n      .to(this.#containerEl, {\n        '--blackout-opacity': '0.6',\n        duration: 0.5,\n        ease: 'power2.in',\n      })\n      .to(this.#containerEl, {\n        '--blackout-opacity': '0',\n        duration: 0.5,\n        ease: 'power2.out',\n        onComplete: spinEnd,\n      }, '<2');\n\n    this.#tlSpin.restart();\n  }\n\n  spinAction() {\n    this.#buttonEl.onclick = () => {\n      this.spin();\n    };\n  }\n\n  init() {\n    this.spinAction();\n\n    this.#containerEl.style.setProperty('--blackout-angle', this.#segmentCount);\n  }\n\n  destroy() {\n    gsap.killTweensOf([this.#containerEl, this.#segmentsEl]);\n\n    this.#buttonEl.onclick = null;\n  }\n}\n\nexport default WheelFortune;\n"],"names":[],"version":3,"file":"index.js.map"}